


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Valvano, solution
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/17/2021
    5 00000000         ; Names: Miguel Gonzalez and Nicholas Richards
    6 00000000         ; UTEID: mag9688 and nar2797
    7 00000000         ; Brief description of the program
    8 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    9 00000000         ; Hardware connections (External: One button and one LED
                       )
   10 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE2 is LED output (1 activates external LED on protob
                       oard)
   12 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   13 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   14 00000000         ; Overall functionality of this system is to operate lik
                       e this
   15 00000000         ;   1) Make PE2 an output and make PE1 and PF4 inputs.
   16 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   17 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   18 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   19 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   20 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   21 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   22 00000000         ;      to 90% to 10% to 30% so on
   23 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   24 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   25 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   26 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   27 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   28 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   29 00000000         ;         cycle or reset to 30%.
   30 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   31 00000000         ; PortE device registers
   32 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   33 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   34 00000000 40024528 
                       GPIO_PORTE_AMSEL_R
                               EQU              0x40024528
   35 00000000 4002452C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_PCTL_R
                               EQU              0x4002452C
   36 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   37 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   38 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   39 00000000         ; PortF device registers
   40 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   41 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   42 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   43 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   44 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   45 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   46 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   47 00000000         ; Miscellaneous registers
   48 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   49 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   50 00000000         
   51 00000000 00001E1F 
                       Count_breathing
                               EQU              0x1E1F      ;7, 711
   52 00000000 000F422C 
                       Count_50ms
                               EQU              0xF422C     ;999, 980
   53 00000000 002DC684 
                       Count_150ms
                               EQU              0x2DC684    ;2, 999, 940
   54 00000000 004C4ADB 
                       Count_250ms
                               EQU              0x4C4ADB    ;4, 999, 899
   55 00000000 006ACF33 
                       Count_350ms
                               EQU              0x6ACF33    ;6, 999, 859
   56 00000000 0089538C 



ARM Macro Assembler    Page 3 


                       Count_450ms
                               EQU              0x89538C    ;8, 999, 820
   57 00000000         
   58 00000000                 IMPORT           TExaS_Init
   59 00000000                 THUMB
   60 00000000                 AREA             DATA, ALIGN=2
   61 00000000         
   62 00000000         ;global variables
   63 00000000 00      Switch_PE1
                               SPACE            1           ;this variable will
                                                             hold previous stat
                                                            e of the switch
   64 00000001 00      Duty_Cycle
                               SPACE            1           ;this variable will
                                                             hold the duty cycl
                                                            e
   65 00000002 00      Breathing_Status
                               SPACE            1           ; this variable wil
                                                            l control the duty 
                                                            cycle for the breat
                                                            hing state.
   66 00000003         
   67 00000003                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   68 00000000                 THUMB
   69 00000000                 EXPORT           Start
   70 00000000         
   71 00000000         Start
   72 00000000         ; TExaS_Init sets bus clock at 80 MHz
   73 00000000 F7FF FFFE       BL               TExaS_Init
   74 00000004         ; voltmeter, scope on PD3
   75 00000004         ; initialization
   76 00000004         ; activate clock for PortE and PortF
   77 00000004 4880            LDR              R0, =SYSCTL_RCGCGPIO_R
   78 00000006 6801            LDR              R1, [R0]
   79 00000008 F041 0130       ORR              R1, #0x30
   80 0000000C 6001            STR              R1, [R0]
   81 0000000E         ; allow time to finish activating
   82 0000000E BF00            NOP                          ; 1
   83 00000010 BF00            NOP                          ; 2
   84 00000012         
   85 00000012         ; set PF4 as input
   86 00000012 487E            LDR              R0, =GPIO_PORTF_DIR_R
   87 00000014 7801            LDRB             R1, [R0]
   88 00000016 F021 0110       BIC              R1, #0x10
   89 0000001A 6001            STR              R1, [R0]
   90 0000001C         ; Set PE1 as input and set PE2 as Output
   91 0000001C 487C            LDR              R0, =GPIO_PORTE_DIR_R
   92 0000001E 7801            LDRB             R1, [R0]
   93 00000020 F021 0102       BIC              R1, #0x02
   94 00000024 F041 0104       ORR              R1, #0x04
   95 00000028 6001            STR              R1, [R0]
   96 0000002A         ; Digital enable PF4
   97 0000002A 487A            LDR              R0, =GPIO_PORTF_DEN_R
   98 0000002C 6801            LDR              R1, [R0]
   99 0000002E F041 0110       ORR              R1, #0x10
  100 00000032 6001            STR              R1, [R0]
  101 00000034         ; Digital Enable PE1 and PE2
  102 00000034 4878            LDR              R0, =GPIO_PORTE_DEN_R



ARM Macro Assembler    Page 4 


  103 00000036 6801            LDR              R1, [R0]
  104 00000038 F041 0106       ORR              R1, #0x06
  105 0000003C 6001            STR              R1, [R0]
  106 0000003E         ; enable pull-up resister for PF4
  107 0000003E 4877            LDR              R0, =GPIO_PORTF_PUR_R
  108 00000040 6801            LDR              R1, [R0]
  109 00000042 F041 0110       ORR              R1, #0x10
  110 00000046 6001            STR              R1, [R0]
  111 00000048         ; TExaS voltmeter, scope runs on interrupts
  112 00000048 B662            CPSIE            I
  113 0000004A         
  114 0000004A 4875            LDR              R0, = Duty_Cycle
  115 0000004C F04F 011E       MOV              R1, #30
  116 00000050 7001            STRB             R1, [R0]    ;set duty cycle to 
                                                            start at 30%
  117 00000052         
  118 00000052 4874            LDR              R0, =GPIO_PORTE_DATA_R
  119 00000054 7801            LDRB             R1, [R0]
  120 00000056 F001 0102       AND              R1, #0x02
  121 0000005A EA4F 0151       LSR              R1, #1
  122 0000005E 4872            LDR              R0, =Switch_PE1
  123 00000060 7001            STRB             R1, [R0]    ;set initial value 
                                                            of PE1 to variable 
                                                            "Switch_PE1"
  124 00000062         
  125 00000062         loop
  126 00000062         ; main engine
  127 00000062 4872            LDR              R0, =GPIO_PORTF_DATA_R
  128 00000064 7801            LDRB             R1,[R0]
  129 00000066 F081 0110       EOR              R1, #0x10
  130 0000006A EA4F 1111       LSR              R1, #4
  131 0000006E 2901            CMP              R1, #1
  132 00000070 D00D            BEQ              Breathing   ;Check to see if PF
                                                            4 was pressed 
  133 00000072         
  134 00000072 486C            LDR              R0, =GPIO_PORTE_DATA_R
  135 00000074 7801            LDRB             R1, [R0]
  136 00000076 F001 0102       AND              R1, #0x02
  137 0000007A EA4F 0151       LSR              R1, #1      ; R1 holds the curr
                                                            ent state of the sw
                                                            itch
  138 0000007E 486A            LDR              R0, =Switch_PE1
  139 00000080 7802            LDRB             R2, [R0]    ; R2 holds the prev
                                                            ious state of switc
                                                            h
  140 00000082 4291            CMP              R1, R2
  141 00000084 D843            BHI              updateSwitch ;If current state 
                                                            is higher than prev
                                                            ious state (button 
                                                            just got pressed)
  142 00000086 D34B            BLO              updateDutyCycle ;If current sta
                                                            te is lower than pr
                                                            evious state (then 
                                                            button was released
                                                            )
  143 00000088 2900            CMP              R1, #0
  144 0000008A D05C            BEQ              CheckDutyCycle ;If current stat
                                                            e is 0 then the but
                                                            ton was not pressed



ARM Macro Assembler    Page 5 


                                                             so continue checki
                                                            ng
  145 0000008C E7E9            B                loop        ;If button is still
                                                             pressed then loop 
                                                            back
  146 0000008E         
  147 0000008E         Breathing
  148 0000008E F04F 0124       MOV              R1, #36     ;R1 will update the
                                                             loop counter
  149 00000092 F04F 0224       MOV              R2, #36     ; R2 holds the loop
                                                             counter
  150 00000096 F04F 0302       MOV              R3, #2      ;R3 will update the
                                                             2nd loop counter
  151 0000009A F04F 0402       MOV              R4, #2      ;R4 holds the 2nd l
                                                            oop counter
  152 0000009E         
  153 0000009E         Breathing1
  154 0000009E 4863            LDR              R0, =GPIO_PORTF_DATA_R
  155 000000A0 7807            LDRB             R7, [R0]
  156 000000A2 F087 0710       EOR              R7, #0x10
  157 000000A6 EA4F 1717       LSR              R7, #4
  158 000000AA 2F00            CMP              R7, #0
  159 000000AC D0D9            BEQ              loop        ;If PF4 is not pres
                                                            sed then go back to
                                                             main loop
  160 000000AE         
  161 000000AE 460A            MOV              R2, R1      ;update the loop co
                                                            unter
  162 000000B0 461C            MOV              R4, R3      ; update the second
                                                             loop counter
  163 000000B2 485C            LDR              R0, =GPIO_PORTE_DATA_R
  164 000000B4 7807            LDRB             R7, [R0]
  165 000000B6 F087 0704       EOR              R7, #0x04
  166 000000BA 7007            STRB             R7, [R0]    ;toggle the LED on
  167 000000BC         
  168 000000BC         wait11
  169 000000BC F641 601F       LDR              R0, =Count_breathing
  170 000000C0         wait10
  171 000000C0 1E40            SUBS             R0, R0, #1  ;delay for set time
                                                            
  172 000000C2 D1FD            BNE              wait10
  173 000000C4 3A01            SUBS             R2, #1
  174 000000C6 D1F9            BNE              wait11      ;continue delay unt
                                                            il loop counter fin
                                                            ished
  175 000000C8 4856            LDR              R0, =GPIO_PORTE_DATA_R
  176 000000CA 7807            LDRB             R7, [R0]
  177 000000CC F027 0704       BIC              R7, #0x04
  178 000000D0 7007            STRB             R7, [R0]    ;toggle the LED off
                                                            
  179 000000D2         wait13
  180 000000D2 F641 601F       LDR              R0, =Count_breathing
  181 000000D6         wait12
  182 000000D6 1E40            SUBS             R0, R0, #1  ; delay for set tim
                                                            e
  183 000000D8 D1FD            BNE              wait12
  184 000000DA 3C01            SUBS             R4, #1
  185 000000DC D1F9            BNE              wait13      ;continue delay unt
                                                            il loop counter fin



ARM Macro Assembler    Page 6 


                                                            ished
  186 000000DE         
  187 000000DE 2901            CMP              R1, #1
  188 000000E0 D00F            BEQ              changeStatus ;if R1 Reach 1 the
                                                            n change status of 
                                                            LED
  189 000000E2 2B01            CMP              R3, #1
  190 000000E4 D00D            BEQ              changeStatus ;if R3 reach 1 the
                                                            n change status of 
                                                            LED
  191 000000E6         
  192 000000E6         Check1
  193 000000E6 4852            LDR              R0, =Breathing_Status
  194 000000E8 7800            LDRB             R0, [R0]    ;get the current st
                                                            atus of the LED
  195 000000EA 2801            CMP              R0, #1
  196 000000EC D004            BEQ              updateBreathing ;if R1, R2 need
                                                            s to increment
  197 000000EE F1A1 0101       SUB              R1, #1      ;decrement R1 by 1
  198 000000F2 F103 0301       ADD              R3, #1      ;increament R3 by 1
                                                            
  199 000000F6 E7D2            B                Breathing1
  200 000000F8         updateBreathing
  201 000000F8 F1A3 0301       SUB              R3, #1      ;decrement R3 by 1 
                                                            
  202 000000FC F101 0101       ADD              R1, #1      ; increment R1 by 1
                                                            
  203 00000100 E7CD            B                Breathing1
  204 00000102         
  205 00000102         ;change the status of the Breathing loop
  206 00000102         changeStatus
  207 00000102 484B            LDR              R0, =Breathing_Status
  208 00000104 7805            LDRB             R5, [R0]
  209 00000106 F085 0501       EOR              R5, #0x01
  210 0000010A 7005            STRB             R5, [R0]
  211 0000010C E7EB            B                Check1
  212 0000010E         
  213 0000010E         ;update the variable "Switch_PE1"
  214 0000010E         updateSwitch
  215 0000010E 4845            LDR              R0, =GPIO_PORTE_DATA_R
  216 00000110 7801            LDRB             R1, [R0]
  217 00000112 F001 0102       AND              R1, #0x02
  218 00000116 EA4F 0151       LSR              R1, #1
  219 0000011A 4843            LDR              R0, =Switch_PE1
  220 0000011C 7001            STRB             R1, [R0]
  221 0000011E E7A0            B                loop
  222 00000120         
  223 00000120         ;update the duty cycle when the buttion is released
  224 00000120         updateDutyCycle
  225 00000120 4840            LDR              R0, =GPIO_PORTE_DATA_R
  226 00000122 7801            LDRB             R1, [R0]
  227 00000124 F001 0102       AND              R1, #0x02
  228 00000128 EA4F 0151       LSR              R1, #1
  229 0000012C 483E            LDR              R0, =Switch_PE1
  230 0000012E 7001            STRB             R1, [R0]    ;update the variabl
                                                            e Switch_PE1
  231 00000130 483B            LDR              R0, =Duty_Cycle
  232 00000132 7801            LDRB             R1, [R0]
  233 00000134 295A            CMP              R1, #90     ;if the duty cycle 



ARM Macro Assembler    Page 7 


                                                            is at 90% change ba
                                                            ck to 10%
  234 00000136 D003            BEQ              update10
  235 00000138 F101 0114       ADD              R1, R1, #20 ;increase duty cycl
                                                            e by 20%
  236 0000013C 7001            STRB             R1, [R0]
  237 0000013E E002            B                CheckDutyCycle
  238 00000140         update10
  239 00000140 F04F 010A       MOV              R1, #10
  240 00000144 7001            STRB             R1, [R0]    ;update the duty cy
                                                            cle from 90% to 10%
                                                            
  241 00000146         
  242 00000146         CheckDutyCycle
  243 00000146 4836            LDR              R0, =Duty_Cycle
  244 00000148 7801            LDRB             R1, [R0]
  245 0000014A 290A            CMP              R1, #10     ;check if duty cycl
                                                            e is 10
  246 0000014C D007            BEQ              duty_10
  247 0000014E 291E            CMP              R1, #30     ;check if duty cycl
                                                            e is 30
  248 00000150 D016            BEQ              duty_30
  249 00000152 2932            CMP              R1, #50     ;check if duty cycl
                                                            e is 50
  250 00000154 D025            BEQ              duty_50
  251 00000156 2946            CMP              R1, #70     ;check if duty cycl
                                                            e is 70
  252 00000158 D034            BEQ              duty_70
  253 0000015A 295A            CMP              R1, #90     ;check if duty cycl
                                                            e is 90
  254 0000015C D043            BEQ              duty_90
  255 0000015E         
  256 0000015E         ;if duty cycle is 10%, on for 50ms and off for 450ms
  257 0000015E         duty_10
  258 0000015E 4831            LDR              R0, =GPIO_PORTE_DATA_R
  259 00000160 7801            LDRB             R1, [R0]
  260 00000162 F081 0104       EOR              R1, #0x04
  261 00000166 7001            STRB             R1, [R0]
  262 00000168 4832            LDR              R0, =Count_50ms
  263 0000016A         wait
  264 0000016A 1E40            SUBS             R0, R0, #1
  265 0000016C D1FD            BNE              wait
  266 0000016E 482D            LDR              R0, =GPIO_PORTE_DATA_R
  267 00000170 7801            LDRB             R1, [R0]
  268 00000172 F021 0104       BIC              R1, #0x04
  269 00000176 7001            STRB             R1, [R0]
  270 00000178 482F            LDR              R0, =Count_450ms
  271 0000017A         wait1
  272 0000017A 1E40            SUBS             R0, R0, #1
  273 0000017C D1FD            BNE              wait1
  274 0000017E E770            B                loop
  275 00000180         
  276 00000180         ;if duty cycle is 30%, on for 150ms and off for 350ms
  277 00000180         duty_30
  278 00000180 4828            LDR              R0, =GPIO_PORTE_DATA_R
  279 00000182 7801            LDRB             R1, [R0]
  280 00000184 F081 0104       EOR              R1, #0x04
  281 00000188 7001            STRB             R1, [R0]
  282 0000018A 482C            LDR              R0, =Count_150ms



ARM Macro Assembler    Page 8 


  283 0000018C         wait2
  284 0000018C 1E40            SUBS             R0, R0, #1
  285 0000018E D1FD            BNE              wait2
  286 00000190 4824            LDR              R0, =GPIO_PORTE_DATA_R
  287 00000192 7801            LDRB             R1, [R0]
  288 00000194 F021 0104       BIC              R1, #0x04
  289 00000198 7001            STRB             R1, [R0]
  290 0000019A 4829            LDR              R0, =Count_350ms
  291 0000019C         wait3
  292 0000019C 1E40            SUBS             R0, R0, #1
  293 0000019E D1FD            BNE              wait3
  294 000001A0 E75F            B                loop
  295 000001A2         
  296 000001A2         ;if duty cycle is 50%, on for 250ms and off for 250ms
  297 000001A2         duty_50
  298 000001A2 4820            LDR              R0, =GPIO_PORTE_DATA_R
  299 000001A4 7801            LDRB             R1, [R0]
  300 000001A6 F081 0104       EOR              R1, #0x04
  301 000001AA 7001            STRB             R1, [R0]
  302 000001AC 4825            LDR              R0, =Count_250ms
  303 000001AE         wait4
  304 000001AE 1E40            SUBS             R0, R0, #1
  305 000001B0 D1FD            BNE              wait4
  306 000001B2 481C            LDR              R0, =GPIO_PORTE_DATA_R
  307 000001B4 7801            LDRB             R1, [R0]
  308 000001B6 F021 0104       BIC              R1, #0x04
  309 000001BA 7001            STRB             R1, [R0]
  310 000001BC 4821            LDR              R0, =Count_250ms
  311 000001BE         wait5
  312 000001BE 1E40            SUBS             R0, R0,#1
  313 000001C0 D1FD            BNE              wait5
  314 000001C2 E74E            B                loop
  315 000001C4         
  316 000001C4         ;if duty cycle is 70%, on for 350ms and off for 150ms
  317 000001C4         duty_70
  318 000001C4 4817            LDR              R0, =GPIO_PORTE_DATA_R
  319 000001C6 7801            LDRB             R1, [R0]
  320 000001C8 F081 0104       EOR              R1, #0x04
  321 000001CC 7001            STRB             R1, [R0]
  322 000001CE 481C            LDR              R0, =Count_350ms
  323 000001D0         wait6
  324 000001D0 1E40            SUBS             R0, R0, #1
  325 000001D2 D1FD            BNE              wait6
  326 000001D4 4813            LDR              R0, =GPIO_PORTE_DATA_R
  327 000001D6 7801            LDRB             R1, [R0]
  328 000001D8 F021 0104       BIC              R1, #0x04
  329 000001DC 7001            STRB             R1, [R0]
  330 000001DE 4817            LDR              R0, =Count_150ms
  331 000001E0         wait7
  332 000001E0 1E40            SUBS             R0, R0, #1
  333 000001E2 D1FD            BNE              wait7
  334 000001E4 E73D            B                loop
  335 000001E6         
  336 000001E6         ;if duty cycle is 90%, on for 450ms and off for 50ms
  337 000001E6         duty_90
  338 000001E6 480F            LDR              R0, =GPIO_PORTE_DATA_R
  339 000001E8 7801            LDRB             R1, [R0]
  340 000001EA F081 0104       EOR              R1, #0x04
  341 000001EE 7001            STRB             R1, [R0]



ARM Macro Assembler    Page 9 


  342 000001F0 4811            LDR              R0, =Count_450ms
  343 000001F2         wait8
  344 000001F2 1E40            SUBS             R0, R0, #1
  345 000001F4 D1FD            BNE              wait8
  346 000001F6 480B            LDR              R0, =GPIO_PORTE_DATA_R
  347 000001F8 7801            LDRB             R1, [R0]
  348 000001FA F021 0104       BIC              R1, #0x04
  349 000001FE 7001            STRB             R1, [R0]
  350 00000200 480C            LDR              R0, =Count_50ms
  351 00000202         wait9
  352 00000202 1E40            SUBS             R0, R0, #1
  353 00000204 D1FD            BNE              wait9
  354 00000206 E72C            B                loop
  355 00000208         
  356 00000208         
  357 00000208                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  358 00000208         
  359 00000208                 END                          ; end of file
              400FE608 
              40025400 
              40024400 
              4002551C 
              4002451C 
              40025510 
              00000000 
              400243FC 
              00000000 
              400253FC 
              00000000 
              000F422C 
              0089538C 
              002DC684 
              006ACF33 
              004C4ADB 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Keil_v5\ARM\CMSIS\5.7.0\CMS
IS\Core\Include -IC:\Keil_v5\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --prede
fine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 533" --predefine="_RTE
_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.
\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Breathing_Status 00000002

Symbol: Breathing_Status
   Definitions
      At line 65 in file main.s
   Uses
      At line 193 in file main.s
      At line 207 in file main.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: DATA unused
Duty_Cycle 00000001

Symbol: Duty_Cycle
   Definitions
      At line 64 in file main.s
   Uses
      At line 114 in file main.s
      At line 231 in file main.s
      At line 243 in file main.s

Switch_PE1 00000000

Symbol: Switch_PE1
   Definitions
      At line 63 in file main.s
   Uses
      At line 122 in file main.s
      At line 138 in file main.s
      At line 219 in file main.s
      At line 229 in file main.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 67 in file main.s
   Uses
      None
Comment: .text unused
Breathing 0000008E

Symbol: Breathing
   Definitions
      At line 147 in file main.s
   Uses
      At line 132 in file main.s
Comment: Breathing used once
Breathing1 0000009E

Symbol: Breathing1
   Definitions
      At line 153 in file main.s
   Uses
      At line 199 in file main.s
      At line 203 in file main.s

Check1 000000E6

Symbol: Check1
   Definitions
      At line 192 in file main.s
   Uses
      At line 211 in file main.s
Comment: Check1 used once
CheckDutyCycle 00000146

Symbol: CheckDutyCycle
   Definitions
      At line 242 in file main.s
   Uses
      At line 144 in file main.s
      At line 237 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 71 in file main.s
   Uses
      At line 69 in file main.s
Comment: Start used once
changeStatus 00000102

Symbol: changeStatus
   Definitions
      At line 206 in file main.s
   Uses
      At line 188 in file main.s
      At line 190 in file main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

duty_10 0000015E

Symbol: duty_10
   Definitions
      At line 257 in file main.s
   Uses
      At line 246 in file main.s
Comment: duty_10 used once
duty_30 00000180

Symbol: duty_30
   Definitions
      At line 277 in file main.s
   Uses
      At line 248 in file main.s
Comment: duty_30 used once
duty_50 000001A2

Symbol: duty_50
   Definitions
      At line 297 in file main.s
   Uses
      At line 250 in file main.s
Comment: duty_50 used once
duty_70 000001C4

Symbol: duty_70
   Definitions
      At line 317 in file main.s
   Uses
      At line 252 in file main.s
Comment: duty_70 used once
duty_90 000001E6

Symbol: duty_90
   Definitions
      At line 337 in file main.s
   Uses
      At line 254 in file main.s
Comment: duty_90 used once
loop 00000062

Symbol: loop
   Definitions
      At line 125 in file main.s
   Uses
      At line 145 in file main.s
      At line 159 in file main.s
      At line 221 in file main.s
      At line 274 in file main.s
      At line 294 in file main.s
      At line 314 in file main.s
      At line 334 in file main.s
      At line 354 in file main.s

update10 00000140

Symbol: update10
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 238 in file main.s
   Uses
      At line 234 in file main.s
Comment: update10 used once
updateBreathing 000000F8

Symbol: updateBreathing
   Definitions
      At line 200 in file main.s
   Uses
      At line 196 in file main.s
Comment: updateBreathing used once
updateDutyCycle 00000120

Symbol: updateDutyCycle
   Definitions
      At line 224 in file main.s
   Uses
      At line 142 in file main.s
Comment: updateDutyCycle used once
updateSwitch 0000010E

Symbol: updateSwitch
   Definitions
      At line 214 in file main.s
   Uses
      At line 141 in file main.s
Comment: updateSwitch used once
wait 0000016A

Symbol: wait
   Definitions
      At line 263 in file main.s
   Uses
      At line 265 in file main.s
Comment: wait used once
wait1 0000017A

Symbol: wait1
   Definitions
      At line 271 in file main.s
   Uses
      At line 273 in file main.s
Comment: wait1 used once
wait10 000000C0

Symbol: wait10
   Definitions
      At line 170 in file main.s
   Uses
      At line 172 in file main.s
Comment: wait10 used once
wait11 000000BC

Symbol: wait11
   Definitions
      At line 168 in file main.s
   Uses
      At line 174 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Comment: wait11 used once
wait12 000000D6

Symbol: wait12
   Definitions
      At line 181 in file main.s
   Uses
      At line 183 in file main.s
Comment: wait12 used once
wait13 000000D2

Symbol: wait13
   Definitions
      At line 179 in file main.s
   Uses
      At line 185 in file main.s
Comment: wait13 used once
wait2 0000018C

Symbol: wait2
   Definitions
      At line 283 in file main.s
   Uses
      At line 285 in file main.s
Comment: wait2 used once
wait3 0000019C

Symbol: wait3
   Definitions
      At line 291 in file main.s
   Uses
      At line 293 in file main.s
Comment: wait3 used once
wait4 000001AE

Symbol: wait4
   Definitions
      At line 303 in file main.s
   Uses
      At line 305 in file main.s
Comment: wait4 used once
wait5 000001BE

Symbol: wait5
   Definitions
      At line 311 in file main.s
   Uses
      At line 313 in file main.s
Comment: wait5 used once
wait6 000001D0

Symbol: wait6
   Definitions
      At line 323 in file main.s
   Uses
      At line 325 in file main.s
Comment: wait6 used once
wait7 000001E0




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Symbol: wait7
   Definitions
      At line 331 in file main.s
   Uses
      At line 333 in file main.s
Comment: wait7 used once
wait8 000001F2

Symbol: wait8
   Definitions
      At line 343 in file main.s
   Uses
      At line 345 in file main.s
Comment: wait8 used once
wait9 00000202

Symbol: wait9
   Definitions
      At line 351 in file main.s
   Uses
      At line 353 in file main.s
Comment: wait9 used once
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Count_150ms 002DC684

Symbol: Count_150ms
   Definitions
      At line 53 in file main.s
   Uses
      At line 282 in file main.s
      At line 330 in file main.s

Count_250ms 004C4ADB

Symbol: Count_250ms
   Definitions
      At line 54 in file main.s
   Uses
      At line 302 in file main.s
      At line 310 in file main.s

Count_350ms 006ACF33

Symbol: Count_350ms
   Definitions
      At line 55 in file main.s
   Uses
      At line 290 in file main.s
      At line 322 in file main.s

Count_450ms 0089538C

Symbol: Count_450ms
   Definitions
      At line 56 in file main.s
   Uses
      At line 270 in file main.s
      At line 342 in file main.s

Count_50ms 000F422C

Symbol: Count_50ms
   Definitions
      At line 52 in file main.s
   Uses
      At line 262 in file main.s
      At line 350 in file main.s

Count_breathing 00001E1F

Symbol: Count_breathing
   Definitions
      At line 51 in file main.s
   Uses
      At line 169 in file main.s
      At line 180 in file main.s

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 48 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_AMSEL_R 40024528

Symbol: GPIO_PORTE_AMSEL_R
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AMSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 118 in file main.s
      At line 134 in file main.s
      At line 163 in file main.s
      At line 175 in file main.s
      At line 215 in file main.s
      At line 225 in file main.s
      At line 258 in file main.s
      At line 266 in file main.s
      At line 278 in file main.s
      At line 286 in file main.s
      At line 298 in file main.s
      At line 306 in file main.s
      At line 318 in file main.s
      At line 326 in file main.s
      At line 338 in file main.s
      At line 346 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 102 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PCTL_R 4002452C



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTE_PCTL_R
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PCTL_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: GPIO_PORTF_CR_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 127 in file main.s
      At line 154 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 86 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: GPIO_PORTF_LOCK_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 43 in file main.s
   Uses
      At line 107 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 49 in file main.s
   Uses
      At line 77 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 58 in file main.s
   Uses
      At line 73 in file main.s
Comment: TExaS_Init used once
1 symbol
394 symbols in table
